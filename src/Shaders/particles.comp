#version 430

layout( local_size_x = 1000 ) in;

uniform uint AttractorsAmount = 2;
    
uniform float ParticleMass = 1.0;
uniform float ParticleInvMass = 1.0 / 0.1;
uniform float DeltaT = 0.0005;
uniform float MaxDist = 90.0;

layout(std430, binding=0) buffer PartsPos {
    vec4 ParticlesPos[];
};

layout(std430, binding=1) buffer PartsVel {
    vec4 ParticlesVel[];
};

layout(std430, binding=2) buffer AttrsPos {
    vec3 AttractorsPos[];
};

layout(std430, binding=3) buffer AttrsGrav {
    float AttractorsGravity[];
};

void main() {
    uint idx = gl_GlobalInvocationID.x;

    vec3 p = ParticlesPos[idx].xyz;
    vec3 force = {0.0, 0.0, 0.0};

    for (int i = 0; i < AttractorsAmount; ++i) {
        vec3 d = AttractorsPos[i] - p;
        float dist = length(d);
        force += (AttractorsGravity[i] / (dist * dist)) * d;
    }

    vec3 a = force * ParticleInvMass;
    ParticlesPos[idx] = vec4(p + ParticlesVel[idx].xyz * DeltaT + 0.5 * a * DeltaT * DeltaT, 1.0);
    ParticlesVel[idx] = vec4(ParticlesVel[idx].xyz + a * DeltaT, 0.0);
}
